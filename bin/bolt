#!/usr/bin/env node

const { App, LogLevel } = require('@slack/bolt');
const Fs = require('fs');
const Path = require('path');

const loadFile = (filepath, filename) => {
  const ext = Path.extname(filename);
  const full = Path.join(filepath, Path.basename(filename, ext));

  try {
    const script = require(full);

    if (typeof script === 'function') {
      script(this);
    } else {
      console.warn(`Expected ${full} to assign a function to module.exports, got ${typeof script}`);
    }
  } catch(error) {
    console.error(`Unable to load ${full}: ${error.stack}`)
    process.exit(1);
  }
};

const scriptPath = Path.resolve('.', 'scripts')

app = new App({
  token: process.env.SLACK_BOT_TOKEN,
  signingSecret: process.env.SLACK_SIGNING_SECRET,
  logLevel: LogLevel.DEBUG
});

app.error((error) => {
  console.error(error);
});

Fs.readdirSync(scriptPath).sort().map(file => loadFile(scriptPath, file));

(async () => {
  await app.start(process.env.PORT || 3000);
  console.log('Bolt app is running!');
})();
